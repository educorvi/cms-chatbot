{
  "id": "https://educorvi.de/cms-chatbot/conf.schema.yaml",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Configuration",
  "description": "Configuration for the inwi-gpt-chatbot",
  "required": [
    "open_ai",
    "search"
  ],
  "properties": {
    "open_ai": {
      "type": "object",
      "title": "OpenAI Settings",
      "description": "Settings for the OpenAI API",
      "required": [
        "api_key",
        "model"
      ],
      "properties": {
        "api_key": {
          "description": "OpenAI API Key",
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "OpenAI model to use (see https://platform.openai.com/docs/models/gpt-4-and-gpt-4-turbo and https://platform.openai.com/docs/models/gpt-3-5)",
          "examples": [
            "gpt-3.5-turbo-16k",
            "gpt-4-1106-preview"
          ]
        },
        "spend_limit": {
          "type": "integer",
          "description": "Monthly spend limit in dollars",
          "default": 50
        }
      }
    },
    "search": {
      "type": "object",
      "title": "Search Settings",
      "description": "Settings for information retrieval",
      "required": [
        "engine"
      ],
      "anyOf": [
        {
          "title": "Search configuration with Typesense",
          "properties": {
            "engine": {
              "const": "typesense"
            }
          },
          "required": [
            "engine",
            "typesense"
          ]
        },
        {
          "title": "Search configuration with ElasticSearch",
          "properties": {
            "engine": {
              "const": "elasticsearch"
            }
          },
          "required": [
            "engine",
            "elasticsearch"
          ]
        }
      ],
      "properties": {
        "engine": {
          "type": "string",
          "description": "Search engine to use",
          "enum": [
            "elasticsearch",
            "typesense"
          ]
        },
        "typesense": {
          "title": "Typesense Settings",
          "description": "Settings for the Typesense search engine",
          "type": "object",
          "required": [
            "host",
            "port",
            "protocol",
            "collection",
            "result_number",
            "result_size",
            "api_key"
          ],
          "properties": {
            "host": {
              "type": "string",
              "description": "Hostname of the Typesense server"
            },
            "port": {
              "type": "integer",
              "description": "Port of the Typesense server"
            },
            "protocol": {
              "type": "string",
              "description": "Protocol of the Typesense server",
              "enum": [
                "http",
                "https"
              ]
            },
            "collection": {
              "type": "string",
              "description": "Name of the Typesense collection"
            },
            "result_number": {
              "type": "integer",
              "description": "Number of results returned per query"
            },
            "result_size": {
              "type": "integer",
              "description": "Number of tokens before and after highlight"
            },
            "api_key": {
              "type": "string",
              "description": "API key for the Typesense server"
            }
          }
        },
        "elasticsearch": {
          "title": "ElasticSearch Settings",
          "description": "Settings for the ElasticSearch search engine",
          "type": "object",
          "required": [
            "url",
            "index",
            "result_number",
            "result_size"
          ],
          "properties": {
            "url": {
              "type": "string",
              "description": "URL of the ElasticSearch server"
            },
            "index": {
              "type": "string",
              "description": "Name of the ElasticSearch index"
            },
            "result_number": {
              "type": "integer",
              "description": "Number of results returned per query"
            },
            "result_size": {
              "type": "integer",
              "description": "Number of characters per result"
            }
          }
        }
      }
    },
    "websocket": {
      "type": "object",
      "title": "Websocket Settings",
      "description": "Settings for the websocket server",
      "required": [
        "port"
      ],
      "properties": {
        "port": {
          "type": "integer",
          "description": "Port of the websocket server"
        },
        "host": {
          "type": "string",
          "description": "Hostname of the websocket server",
          "default": "localhost"
        }
      }
    },
    "deepl": {
      "type": "object",
      "title": "DeepL Settings",
      "description": "Settings for the DeepL API",
      "required": [
        "api_key"
      ],
      "properties": {
        "api_key": {
          "description": "DeepL API Key",
          "type": "string"
        }
      }
    },
    "source_replace": {
      "type": "object",
      "title": "Source URL Replacement",
      "description": "Replaces parts of the source url that is returned to the client",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "from": {
          "type": "string",
          "description": "Regex to match"
        },
        "to": {
          "type": "string",
          "description": "Replacement"
        }
      }
    }
  }
}
